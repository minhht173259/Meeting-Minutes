name: CICD For Production Deployment
on:
  pull_request:
    branches: [main]
  repository_dispatch:
    types: ['prod_deployment']
    branches: [main]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.14.x]
      fail-fast: true
    steps:
      - name: Before Checkout
        run: |
          pwd
          ls -a
          echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          echo '${{ toJSON(github) }}'
      - name: Checkout code 
        uses: actions/checkout@v3
        # with:
        #   ref: ${{ github.event.pull_request.head.sha }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install Dependency
        run: npm install
      - name: Run Prettier to check format code
        run: npm run prettier
      - name: Run Unit Test
        # run: npm test -- --coverage
        run: echo "Run test"
        env: 
          CI: true
      # - name: Upload Test Coverage 
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: my-artifact
      #     # path: path/**/[abc]rtifac?/*
      #     path: coverage
      - name: Build Project
        if: github.event_name == 'repository_dispatch'
        run: npm run build
        timeout-minutes: 10
      - name: Upload Build Folder
        if: github.event_name == 'repository_dispatch'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

      # - name: Create a Realease
      #   if: >- 
      #     github.event_name = 'repository_dispatch' && github.ref == 'ref/heads/main'
      #   run: npx sematic-release
      #   env: 
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Download Artifact
      #   if: github.event_name == 'push'0
      #   uses: actions/download-artifact@v3
      - name: Deploy to Production
        if: github.event_name == 'repository_dispatch'
        run: echo "deloy to Surge"
      - name: Deploy Production to Heroku
        if: >-
          github.event_name == 'repository_dispatch' && github.ref == 'ref/heads/main'
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.API_HEROKU_TOKEN}}
          heroku_app_name: $app_name #Must be unique in Heroku
          heroku_email: $my_email
          # usedocker: true
        env:
          app_name: risk-investigation
          my_email: minh.ht173259@sis.hust.edu.vn
      - name: Notification When Success
        if: github.event_name == 'repository_dispatch' && github.ref == 'ref/heads/main' && success()
        run: echo "Deploy Success"
      - name: Notification When Failed
        if: github.event_name == 'repository_dispatch' && github.ref == 'ref/heads/main' && failure()
        run: echo "Deploy Failed"